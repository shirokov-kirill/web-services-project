# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/frontend/node_modules
/frontend/.pnp
/frontend/.pnp.js

# testing
/frontend/coverage

# production
/frontend/build

# misc
/frontend/.DS_Store
/frontend/.env.local
/frontend/.env.development.local
/frontend/.env.test.local
/frontend/.env.production.local

/frontend/npm-debug.log*
/frontend/yarn-debug.log*
/frontend/yarn-error.log*

# Created by .ignore support plugin (hsz.mobi)
### Python template
# Byte-compiled / optimized / DLL files
/backend/__pycache__/
/backend/*.py[cod]
/backend/*$py.class

# C extensions
/backend/*.so

# Distribution / packaging
/backend/.idea/shelf/
/backend/.idea/workspace.xml
/backend/.Python
/backend/build/
/backend/develop-eggs/
/backend/dist/
/backend/downloads/
/backend/eggs/
/backend/.eggs/
/backend/lib/
/backend/lib64/
/backend/parts/
/backend/sdist/
/backend/var/
/backend/wheels/
/backend/share/python-wheels/
/backend/*.egg-info/
/backend/.installed.cfg
/backend/*.egg
/backend/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
/backend/*.manifest
/backend/*.spec

# Installer logs
/backend/pip-log.txt
/backend/pip-delete-this-directory.txt

# Unit test / coverage reports
/backend/htmlcov/
/backend/.tox/
/backend/.nox/
/backend/.coverage
/backend/.coverage.*
/backend/.cache
/backend/nosetests.xml
/backend/coverage.xml
/backend/*.cover
/backend/*.py,cover
/backend/.hypothesis/
/backend/.pytest_cache/
/backend/cover/

# Translations
/backend/*.mo
/backend/*.pot

# Django stuff:
/backend/mysite/*.log
/backend/mysite/local_settings.py
/backend/mysite/db.sqlite3
/backend/mysite/db.sqlite3-journal

# Flask stuff:
/backend/instance/
/backend/.webassets-cache

# Scrapy stuff:
/backend/.scrapy

# Sphinx documentation
/backend/docs/_build/

# PyBuilder
/backend/.pybuilder/
/backend/target/

# Jupyter Notebook
/backend/.ipynb_checkpoints

# IPython
/backend/profile_default/
/backend/ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
/backend/__pypackages__/

# Celery stuff
/backend/celerybeat-schedule
/backend/celerybeat.pid

# SageMath parsed files
/backend/*.sage.py

# Environments
/backend/.env
/backend/.venv
/backend/env/
/backend/venv/
/backend/ENV/
/backend/env.bak/
/backend/venv.bak/

# Spyder project settings
/backend/.spyderproject
/backend/.spyproject

# Rope project settings
/backend/.ropeproject

# mkdocs documentation
/backend/site

# mypy
/backend/.mypy_cache/
/backend/.dmypy.json
/backend/dmypy.json

# Pyre type checker
/backend/.pyre/

# pytype static type analyzer
/backend/.pytype/

# Cython debug symbols
/backend/cython_debug/

#pytest
/backend/.pytest_cashe/
backend/tests/__pycache__/
